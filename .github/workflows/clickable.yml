name: Clickable build

on:
  workflow_dispatch
    #inputs:
      #build_type: [Debug, Release]
        #description: 'Log level'
        #required: true
        #default: 'warning'
      #tags:
        #description: 'Test scenario tags'

jobs:
  clickable:
    strategy:
      fail-fast: false
      matrix:
        build_type: [Debug] #, Release]
        arch: [amd64, arm64, armhf]

    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: Install clickable
        run: |
          # For whatever reason, I have to manually install runc before
          # docker.io or containerd, else it fails because of broken dependency
          # Using apt-get because apt complains it shouldn't be used in scripts
          sudo apt-get update
          sudo apt-get install -y runc
          sudo apt-get install -y docker.io adb git python3 python3-pip
          pip3 install --user git+https://gitlab.com/clickable/clickable.git

          # Clickable requires a reboot. This is a sneaky way to bypass that :^)
          sudo systemctl unmask docker.service
          sudo systemctl start docker.service

      - name: Build the gocryptfs
        env:
          ARCH: ${{ matrix.arch }}
        run: ~/.local/bin/clickable build --libs --arch ${ARCH}

      - uses: actions/upload-artifact@v2
        with:
          name: "gocryptfs-${{ matrix.arch }}"
          path: build/*/gocryptfs/install/*
          if-no-files-found: error

      - name: Build the app
        env:
          BUILD_TYPE: ${{ (matrix.build == 'Debug') && '--debug' || '' }}
          ARCH: ${{ matrix.arch }}
        run: ~/.local/bin/clickable build --arch ${ARCH}

      - uses: actions/upload-artifact@v2
        with:
          name: "vaults-ut-${{ matrix.arch }}-${{ matrix.build_type }}-click"
          path: build/*/app/*.click
          if-no-files-found: error

      - name: Publish to Open Store
        if: ${{ github.ref == 'refs/heads/master' && matrix.build_type == 'Release' }}
        env:
          ARCH: ${{ matrix.arch }}
          OPENSTORE_KEY: ${{ secrets.OPENSTORE_KEY }}
        run: |
          ~/.local/bin/clickable publish --apikey ${OPENSTORE_KEY} --arch ${ARCH}
